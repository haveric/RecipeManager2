lastchanged: 2.31.0
# Configurable messages.
# Parts surrounded by { and } are variables that get replaced in-game, you can move them around or even remove them if you want.
# To disable messages you can just delete the message or use 'false'.
flag:
  biome:
    allowed: "<red>Allowed biomes: <yellow>{biomes}"
    unallowed: "<red>Unallowed biomes: <yellow>{biomes}"
  blockpowered: <red>Need a {blockname} powered by redstone.
  clone:
    resultdisplay: <dark_aqua><italic>(clone)
  cooldown:
    fail:
      perplayer: "<red>Personal cooldown: {time}"
      global: "<red>Global cooldown: {time}"
    set:
      perplayer: <yellow>Personal cooldown set to {time}
      global: <yellow>Global cooldown set to {time}
  gamemode: "<red>Allowed gamemodes: <yellow>{gamemodes}"
  group:
    allowed: "<red>Allowed groups: <yellow>{groups}"
    unallowed: "<red>Unallowed groups: <yellow>{groups}"
  height: "<red>Need height: <yellow>{height}"
  holditem: "<red>Need to hold: <yellow>{items}"
  individualresults:
    preparelore:
      failchance: "<red>Chance to fail: <white>{chance}%"
  ingredientconditions:
    nodata: "<yellow>{item}<red> needs data values: <yellow>{data}"
    noamount: "<yellow>{item}<red> needs amount: <yellow>{amount}"
    noenchants: "<yellow>{item}<red> needs enchantments: <yellow>{enchants}"
    emptyenchants: "<yellow>{item}<red> cannot have any enchantments"
    nobookenchants: "<yellow>{item}<red> needs enchantments: <yellow>{enchants}"
    emptybookenchants: "<yellow>{item}<red> cannot have any enchantments"
    noname: "<yellow>{item}<red> needs name: <yellow>{name}"
    emptyname: "<yellow>{item}<red> cannot have custom name"
    noitemname: "<yellow>{item}<red> needs name: <yellow>{name}"
    emptyitemname: "<yellow>{item}<red> cannot have custom name"
    nolocalizedname: "<yellow>{item}<red> needs localized name: <yellow>{name}"
    emptylocalizedname: "<yellow>{item}<red> cannot have localized name"
    nocustommodeldata: "<yellow>{item}<red> needs custom model data: <yellow>{data}"
    emptycustommodeldata: "<yellow>{item}<red> cannot have model data."
    nolore: "<yellow>{item}<red> needs lore: <yellow>{lore}"
    emptylore: "<yellow>{item}<red> cannot have any lore"
    nocolor: "<yellow>{item}<red> needs color: <yellow>{color}"
    nopotiontype: "<yellow>{item}<red> needs potion type: <yellow>{potion}"
    nopotioneffect: "<yellow>{item}<red> needs effect(s): <yellow>{effect}"
    nosuspicioussteweffect: "<yellow>{item}<red> needs effect(s): <yellow>{effect}"
    nobannerpatterns: "<yellow>{item}<red> needs banner pattern(s): <yellow>{patterns}"
    nospawneggentitytype: "<yellow>{item}<red> needs entity type: <yellow>{entitytype}"
    emptyunbreakable: "<yellow>{item}<red> needs to be unbreakable"
    nounbreakable: "<yellow>{item}<red> needs to not be unbreakable"
    emptyhidetooltip: "<yellow>{item}<red> needs to have a hidden tooltip"
    nohidetooltip: "<yellow>{item}<red> needs to not have a hidden tooltip"
    emptyenchantmentglint: "<yellow>{item}<red> needs to have an enchantment glint override"
    noenchantmentglint: "<yellow>{item}<red> needs to not have an enchantment glint override"
    emptyfireresistant: "<yellow>{item}<red> needs to be fire resistant"
    nofireresistant: "<yellow>{item}<red> needs to not be fire resistant"
    emptymaxstacksize: "<yellow>{item}<red> needs to have a max stack size"
    nomaxstacksize: "<yellow>{item}<red> needs to not have a max stack size"
    emptyrarity: "<yellow>{item}<red> needs to have a rarity"
    norarity: "<yellow>{item}<red> needs to not have a rarity"
    emptyominousbottleamplifier: "<yellow>{item}<red> needs to have an ominous bottle amplifier"
    noominousbottleamplifier: "<yellow>{item}<red> needs to not have an ominous bottle amplifier"
    emptydamage: "<yellow>{item}<red> needs to be damageable"
    nodamage: "<yellow>{item}<red> needs damage values: <yellow>{data}"
    emptymaxdamage: "<yellow>{item}<red> needs to be damageable"
    nomaxdamage: "<yellow>{item}<red> needs max damage values: <yellow>{data}"
    emptyrepaircost: "<yellow>{item}<red> needs to be repairable"
    norepaircost: "<yellow>{item}<red> needs repair cost values: <yellow>{data}"
  inventory: "<red> Need inventory: {inventory}"
  lightlevel: <red>Need to be in <yellow>{light}<red> levels of <yellow>{type}<red>.
  modexp:
    preparelore:
      add: "Mod Exp: + {amount}"
      sub: "Mod Exp: - {amount}"
      set: "Mod Exp: = {amount}"
    craftmessage:
      add: <green>+{amount}<reset> EXP
      sub: <yellow>-{amount}<reset> EXP
      set: <reset>EXP set to <yellow>{amount}
  modlevel:
    preparelore:
      add: "Mod Level: + {amount}"
      sub: "Mod Level: - {amount}"
      set: "Mod Level: = {amount}"
    craftmessage:
      add: <green>+{amount}<reset> level(s)
      sub: <red>-{amount}<reset> level(s)
      set: <reset>Level set to <yellow>{amount}
  modmoney:
    preparelore:
      add: "Mod Money: + {amount}"
      sub: "Mod Money: - {amount}"
      set: "Mod Money: = {amount}"
    craftmessage:
      add: <green>+{money}
      sub: <red>-{money}
      set: <reset>Money set to <yellow>{money}
  needexp:
    preparelore:
      default: "Need exp: {minexp}"
      exact: "Need exact exp: {minexp}"
      exactboth: "Need exact exp: {minexp} - {maxexp}"
    checkmessage: "<red>Need EXP: <yellow>{exp}<reset>. Current EXP:<yellow> {playerexp}"
  needlevel:
    preparelore:
      default: "Need level: {minlevel}"
      exact: "Need exact level: {minlevel}"
      exactboth: "Need exact level: {minlevel} - {maxlevel}"
    checkmessage: "<red>Need level: <yellow>{level}"
  needmoney:
    preparelore:
      default: "Need money: {fminmoney}"
      exact: "Need exact money: {fminmoney}"
      exactboth: "Need exact money: {fminmoney} - {fmaxmoney}"
    checkmessage: "<red>Need money: <yellow>{fmoney}"
  permission:
    allowed: "<red>Allowed permissions: <yellow>{permissions}"
    unallowed: "<red>Unallowed permissions: <yellow>{permissions}"
  potioneffects: "<red>Need potion effect: {effects}"
  repaircost:
    preparelore: "Repair Cost: {cost}"
  restrict: <red>Recipe is disabled.
  setblock:
    needsworkbench: <red>Recipe needs to be used with a workbench!
  temperature: "<red>Needs temperature: <yellow>{temperature}<reset>. Current Temperature: <red>{actual}"
  weather: "<red>Needs weather: <yellow>{weather}"
  world:
    allowed: "<red>Allowed worlds: <yellow>{worlds}"
    unallowed: "<red>Unallowed worlds: <yellow>{worlds}"
  prefix:
    recipe: <gray>(Recipe) <reset>
    result: <gray>(Result {item}<gray>) <reset>
    furnace: <gray>(Furnace {location}) <reset>
craft:
  repair:
    disabled: <red>Repair recipes disabled.
  special:
    leatherdye: <red>Leather dyeing is disabled.
    fireworks: <red>Firework crafting is disabled.
    fireworkstar: <red>Firework star crafting is disabled.
    fireworkstarfade: <red>Firework star fade crafting is disabled.
    map:
      cloning: <red>Map cloning is disabled.
      extending: <red>Map extending is disabled.
    book:
      cloning: <red>Book cloning is disabled.
    banner: <red>Banner crafting is disabled.
    bannerduplicate: <red>Banner duplicate crafting is disabled.
    decoratedpot: <red>Decorated Pot crafting is disabled.
    shieldbanner: <red>Shield Banner crafting is disabled.
    tippedarrows: <red>Tipped arrows crafting is disabled.
    shulkerdye: <red>Shulker dying is disabled.
    suspiciousstew: <red>Suspicious Stew crafting is disabled.
    smithing:
      armortrim:
        coast: <red>Coast Armor Trim crafting is disabled.
        dune: <red>Dune Armor Trim crafting is disabled.
        eye: <red>Eye Armor Trim crafting is disabled.
        host: <red>Host Armor Trim crafting is disabled.
        raiser: <red>Raiser Armor Trim crafting is disabled.
        rib: <red>Rib Armor Trim crafting is disabled.
        sentry: <red>Sentry Armor Trim crafting is disabled.
        shaper: <red>Shaper Armor Trim crafting is disabled.
        silence: <red>Silence Armor Trim crafting is disabled.
        snout: <red>Snout Armor Trim crafting is disabled.
        spire: <red>Spire Armor Trim crafting is disabled.
        tide: <red>Tide Armor Trim crafting is disabled.
        vex: <red>Vex Armor Trim crafting is disabled.
        ward: <red>Ward Armor Trim crafting is disabled.
        wayfinder: <red>Wayfinder Armor Trim crafting is disabled.
        wild: <red>Wild Armor Trim crafting is disabled.
  result:
    denied:
      title: <yellow><underline>You can't craft this recipe!
      info: <green>See chat for reasons.
    noreceive:
      title: <yellow><underline>You can't craft any results from this recipe!
      info: <green>See chat for reasons.
    receive:
      title:
        unknown: <light_purple><underline>You will get an unknown item!
        random: "<light_purple><underline>You will get a random item:"
    list:
      item: <dark_green>{chance} <green>{item} {clone}
      secret: <dark_aqua>{num} secret item
      secrets: <dark_aqua>{num} secret items
      failure: <red>{chance} Failure chance
      unavailable: <dark_red>{num} unavailable item
      unavailables: <dark_red>{num} unavailable items
item:
  anydata: <gray>any
recipebook:
  volume: Volume {volume}
  volumeofvolumes: Volume {volume} of {volumes}
  header:
    anvil: <black><bold>ANVIL RECIPE
    blasting: <black><bold>BLASTING RECIPE
    brewing: <black><bold>BREWING RECIPE
    burntime: <black><underline>Burning time
    campfire: <black><bold>CAMPFIRE RECIPE
    combine: <black><bold>SHAPELESS RECIPE
    compost: <black><bold>COMPOST RECIPE
    compostlevel: <black><underline>Levels
    contents: <black><bold><underline>CONTENTS INDEX
    cooktime: <black><underline>Cooking time
    craft: <black><bold>SHAPED RECIPE
    fuel: <black><bold>FURNACE FUEL
    ingredient: <black><underline>Ingredient
    ingredients: <black><underline>Ingredients
    pattern: <black><underline>Pattern
    potion: <black><underline>Potion
    requirefuel: <black><underline>As fuel
    shape: <black><underline>Shape
    smelt: <black><bold>FURNACE RECIPE
    smoking: <black><bold>SMOKING RECIPE
    stonecutting: <black><bold>STONECUTTING RECIPE
  moreresults: <dark_green>+{amount} more results
  smelt:
    time:
      normal: <black>Normal <gray>(<dark_red>{time} <gray>seconds)
      instant: <dark_green>Instant <gray>(0 seconds)
      fixed: <red>{time} <black>seconds
      random: <red>{min} <black>to <red>{max} <black>seconds
  fuel:
    time:
      fixed: <dark_green>{time} <black>seconds
      random: <dark_green>{min} <black>to <dark_green>{max} <black>seconds
  compost:
    level: <dark_green>{levelsuccess}<black>%,  <dark_green>{levels} <black>levels
  anvil:
    repaircost: "<black><underline>Repair Cost:<dark_green> {repaircost}"
  update:
    extinct: <red>Your '<yellow>{title}<red>' recipe book does not exist anymore, it won't be updated further.
    novolume: <red>Your '<yellow>{title}<red>' recipe book does not have <yellow>volume {volume}<red> anymore, it won't be updated further.
    done: <gray>Your held recipe book has been updated!
    changed:
      title: <gray>Title changed from '<reset>{oldtitle}<gray>' to '<reset>{newtitle}<gray>'.
      pages: <gray>Pages change from <red>{oldpages}<gray> pages to <green>{newpages}<gray> pages.
cmd:
  getbook:
    invalidnumber: <red>Volume argument must be a number!
    notexist: <red>No books found by '{arg}'.
    manymatches: "<red>Found {num} books by '{arg}':"
    given: "<green>Got book: {title}"
    usage: "<yellow>Usage: <gray>/{command} <white><title> [#<volume>]"
  books:
    nobooks: <red>No generated books.
    header: "<yellow>Generated recipe books ({number}):"
    item: "<white>{title} <gray>(volumes: {volumes})"
  extract:
    wait: <red>Command re-used too fast, wait a second.
    unknownarg: "<red>Unknown argument: <yellow>{arg}"
    converting: <gray>Searching and converting recipes...
    norecipes: <yellow>No recipes to extract.
    done: <green>Done! Recipes saved to '<white>{file}<green>'.
  extractrecipe:
    done: <green>Done! Recipe saved to '<white>{file}<green>'.
  recipes:
    usage1: "<yellow>Usage: <gray>/{command} <white><material>:[data]:[amount]"
    usage2: "<yellow>Item in hand: <gray>/{command} <white>this"
    usage3: "<yellow>Only Ingredients: <gray>/{command} <white><material>:[data]:[amount] i"
    usage4: "<yellow>Only Results: <gray>/{command} <white><material>:[data]:[amount] r"
    stats:
      mc: "Minecraft: <green>{num}"
      rm: "RecipeManager: <green>{num}"
      other: "Other plugins/mods: <green>{num}"
    header: <yellow>----- <white>Recipes for <green>{item} <white>({num} of {total}) <yellow>-----
    more: <yellow>----- <white><blue>{cmdnext} <white>for next, <blue>{cmdprev} <white>for previous <yellow>-----
    end: <yellow>----- <white>No more recipes <yellow>-----
    nonext: <red>No more recipes, type <blue>{command} <red>to see the previous recipe.
    noprev: <red>Can't go backwards more than this, type <blue>{command} <red>to see the next recipe.
    needquery: <red>No search query! Use {command} with an item name to search.
    noresults: <red>No results for <yellow>{item}
    nohand: <red>You don't have anything in your hand therefore you can't use 'this' argument.
    invaliditem: "<red>Invalid item: <yellow>{arg}"
  finditem:
    usage: "<yellow>Usage: <gray>/{command} <white><item partial name>"
    invalidhelditem: <yellow>You need to hold an item to use the '<white>this<yellow>' argument.
    header: "Found <green>{matches}<white> materials matching '<green>{argument}<white>':"
    list: <green>{material}<gray>, max durability <yellow>{maxdata}<gray>, max stack <yellow>{maxstack}
    foundmore: <yellow>... and <green>{matches}<yellow> more, be more specific in your search.
    notfound: <yellow>No material found by '<white>{argument}<yellow>'.
